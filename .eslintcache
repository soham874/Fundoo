[{"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\index.js":"1","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\App.js":"2","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\reportWebVitals.js":"3","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Registration\\registration.jsx":"4","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\InputField\\inputFields.jsx":"5","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Login\\login.jsx":"6","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Snackbar\\snackbarMessages.jsx":"7","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Reset-Password\\ResetPassword.jsx":"8","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Forgot-password\\forgot.jsx":"9","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Dashboard\\Dashboard.jsx":"10","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Note-Template\\Note.jsx":"11","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Icon-Palette\\iconsPalette.jsx":"12","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\ProtectedRoute.jsx":"13","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\services\\fire.jsx":"14"},{"size":459,"mtime":1611658421657,"results":"15","hashOfConfig":"16"},{"size":1171,"mtime":1611924581132,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":6658,"mtime":1612941784564,"results":"19","hashOfConfig":"16"},{"size":2413,"mtime":1611470708835,"results":"20","hashOfConfig":"16"},{"size":3519,"mtime":1612895711020,"results":"21","hashOfConfig":"16"},{"size":748,"mtime":1612940699748,"results":"22","hashOfConfig":"16"},{"size":3292,"mtime":1612895842111,"results":"23","hashOfConfig":"16"},{"size":2564,"mtime":1612895647566,"results":"24","hashOfConfig":"16"},{"size":11783,"mtime":1612895459707,"results":"25","hashOfConfig":"16"},{"size":4335,"mtime":1611923726397,"results":"26","hashOfConfig":"16"},{"size":2488,"mtime":1611829548244,"results":"27","hashOfConfig":"16"},{"size":430,"mtime":1611928732021,"results":"28","hashOfConfig":"16"},{"size":469,"mtime":1612938638150,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"rusc5h",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\index.js",[],["63","64"],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\App.js",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\reportWebVitals.js",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Registration\\registration.jsx",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\InputField\\inputFields.jsx",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Login\\login.jsx",["65"],"import React from 'react'\r\nimport { TextInput } from '../InputField/inputFields'\r\nimport { Link } from 'react-router-dom'\r\nimport { Checkbox } from '@material-ui/core'\r\nimport SimpleSnackbar from '../Snackbar/snackbarMessages'\r\n\r\nexport default class loginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userName: React.createRef(),\r\n            password: React.createRef(),\r\n            notification: ''\r\n        }\r\n    }\r\n\r\n    handleCallback = (inputString) => {\r\n        return inputString\r\n    }\r\n\r\n    //toggles visibility of password box\r\n    toggleVisibility = () => {\r\n        this.state.password.current.togglePassword()\r\n    }\r\n\r\n    checkInput = (e) => {\r\n        e.preventDefault();\r\n        let password = this.state.password.current.returnValue()\r\n        let username = this.state.userName.current.returnValue()\r\n\r\n        if (password.length === 0 || username.length === 0) {\r\n            if (password.length === 0)\r\n                this.state.password.current.setFieldEmpty(\"Password\")\r\n            if (username.length === 0)\r\n                this.state.userName.current.setFieldEmpty(\"Username\")\r\n        } else {\r\n            let data = {\r\n                \"email\": username,\r\n                \"password\": password\r\n            }\r\n            // userServices.login(data).then((response) => {\r\n            //     console.log(response)\r\n            //     localStorage.setItem('userId',response.data.id)\r\n            //     this.setState({notification:\"Account login successfully\"})\r\n            //     setTimeout(() => {\r\n            //         this.props.history.push(\"/dashboard\")\r\n            //     }, 3000)\r\n            // }).catch((error) => {\r\n            //     this.setState({notification:\"Invalid username/password\"})\r\n            //     console.log(error)\r\n            // })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"loginFormback\">\r\n                <div className=\"independet_text\" style={{ textAlign: 'center' }}>\r\n                    <b><span style={{ color: \"#4285F4\" }}>F</span>\r\n                        <span style={{ color: \"#DB4437\" }}>u</span>\r\n                        <span style={{ color: \"#F4B400\" }}>n</span>\r\n                        <span style={{ color: \"#4285F4\" }}>d</span>\r\n                        <span style={{ color: \"#0F9D58\" }}>o</span>\r\n                        <span style={{ color: \"#DB4437\" }}>o</span></b>\r\n                    <p>Sign In your Fundoo account</p>\r\n                </div>\r\n\r\n                <TextInput label=\"Email\" ref={this.state.userName} parentCallback={this.handleCallback} />\r\n\r\n                <TextInput label=\"Password\" type=\"password\" ref={this.state.password} parentCallback={this.handleCallback} />\r\n\r\n                <div>\r\n                    <Checkbox onClick={this.toggleVisibility}></Checkbox>\r\n                    <span className=\"password_text\" style={{ padding: 0 }}>Show Password</span>\r\n                </div>\r\n\r\n                <div className=\"options\" style={{ marginTop: 0 }}><Link to=\"/forgot-password\" className=\"link\">Forgot Password?</Link></div>\r\n\r\n                <div className=\"options\">\r\n                    <Link to=\"/registration\" className=\"link\"><div>Create a new account</div></Link>\r\n                    <span><button onClick={this.checkInput}>Login</button></span>\r\n                </div>\r\n                <SimpleSnackbar notif={this.state.notification}/>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Snackbar\\snackbarMessages.jsx",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Reset-Password\\ResetPassword.jsx",["66","67"],"import React from 'react'\r\nimport { TextInput } from '../InputField/inputFields'\r\nimport '../Registration/registration.css'\r\nimport { Checkbox } from '@material-ui/core'\r\nimport SimpleSnackbar from '../Snackbar/snackbarMessages'\r\n\r\nconst patternPassword = RegExp('(?=.*[A-Z])(?=.*[0-9])(?=[^.,:;!@#$%^&*_+=]*[.,:;!@#$%^&*_+=][^.,:;!@#$%^&*_+=]*$).{8,}$')\r\n\r\nexport default function ResetForm(props) {\r\n    const [state] = React.useState({\r\n        confirm: React.createRef(),\r\n        password: React.createRef()\r\n    });\r\n\r\n\r\n    const handleCallback = (inputString) => {\r\n        return inputString\r\n    }\r\n\r\n    //toggles visibility of password box\r\n    const toggleVisibility = () => {\r\n        state.password.current.togglePassword()\r\n        state.confirm.current.togglePassword()\r\n    }\r\n \r\n    //verifies password validity and resets\r\n    const checkInput = (e) => {\r\n        e.preventDefault();\r\n        let token = props.match.params.id\r\n        let password = state.password.current.returnValue()\r\n        let confirm = state.confirm.current.returnValue()\r\n\r\n        if (!patternPassword.test(password))\r\n            state.password.current.setCustomError(\"Password is invalid\")\r\n\r\n        if (password.length === 0)\r\n            state.password.current.setCustomError(\"Password cannot be empty\")\r\n\r\n        if (password !== confirm || confirm.length === 0 || !patternPassword.test(password)) {\r\n            state.confirm.current.setCustomError(\"Passwords donot match\")\r\n            return\r\n        }\r\n\r\n        let data = {\r\n            \"newPassword\": password\r\n        }\r\n\r\n        // userServices.resetPassword(data, token).then((response) => {\r\n        //     console.log(response)\r\n        //     SimpleSnackbar.handleClick(\"Password has been reset successfully\")\r\n        //     setTimeout(() => {\r\n        //         props.history.push(\"/login\")\r\n        //     }, 3000)\r\n        // }).catch((error) => {\r\n        //     SimpleSnackbar.handleClick(\"Password reset failed\")\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    return (\r\n        <form className=\"loginFormback\">\r\n            <div className=\"independet_text\" style={{ textAlign: 'center' }}>\r\n                <b><span style={{ color: \"#4285F4\" }}>F</span>\r\n                    <span style={{ color: \"#DB4437\" }}>u</span>\r\n                    <span style={{ color: \"#F4B400\" }}>n</span>\r\n                    <span style={{ color: \"#4285F4\" }}>d</span>\r\n                    <span style={{ color: \"#0F9D58\" }}>o</span>\r\n                    <span style={{ color: \"#DB4437\" }}>o</span></b>\r\n                <p>Reset your Fundoo account password</p>\r\n            </div>\r\n\r\n            <TextInput label=\"New password\" type=\"password\" ref={state.password} parentCallback={handleCallback} />\r\n\r\n            <TextInput label=\"Confirm\" type=\"password\" ref={state.confirm} parentCallback={handleCallback} />\r\n\r\n            <div>\r\n                <Checkbox onClick={toggleVisibility}></Checkbox>\r\n                <span className=\"password_text\" style={{ padding: 0 }}>Show Password</span>\r\n            </div>\r\n\r\n            <div className=\"options\">\r\n                <span><button onClick={checkInput}>Resest Password</button></span>\r\n            </div>\r\n            <SimpleSnackbar />\r\n        </form>\r\n    )\r\n\r\n}","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Forgot-password\\forgot.jsx",["68"],"import React from 'react'\r\nimport { TextInput } from '../InputField/inputFields'\r\nimport '../Login/login.css'\r\nimport '../Registration/registration.css'\r\nimport { Link } from 'react-router-dom'\r\nimport SimpleSnackbar from '../Snackbar/snackbarMessages'\r\n\r\nexport default class loginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userName: React.createRef(),\r\n        }\r\n    }\r\n\r\n    handleCallback = (inputString) => {\r\n        return inputString\r\n    }\r\n\r\n    checkInput = (e) => {\r\n        e.preventDefault();\r\n        let username = this.state.userName.current.returnValue()\r\n\r\n        if (username.length === 0)\r\n            this.state.userName.current.setFieldEmpty(\"Email\")\r\n        else {\r\n            let data = {\r\n                \"email\": username\r\n            }\r\n\r\n            // userServices.resetEmail(data).then((response) => {\r\n            //     console.log(response)\r\n            //     this.state.userName.current.resetField()\r\n            //     SimpleSnackbar.handleClick(\"Reset link sent successfully\")\r\n            //     setTimeout(() => {\r\n            //         this.props.history.push(\"/login\")\r\n            //     }, 3000)\r\n            // }).catch((error) => {\r\n            //     this.state.userName.current.setCustomError(\"Email doesnot exist in database\")\r\n            //     console.log(error)\r\n            // })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"loginFormback\">\r\n                <div className=\"independet_text\" style={{ textAlign: 'center' }}>\r\n                    <b><span style={{ color: \"#4285F4\" }}>F</span>\r\n                        <span style={{ color: \"#DB4437\" }}>u</span>\r\n                        <span style={{ color: \"#F4B400\" }}>n</span>\r\n                        <span style={{ color: \"#4285F4\" }}>d</span>\r\n                        <span style={{ color: \"#0F9D58\" }}>o</span>\r\n                        <span style={{ color: \"#DB4437\" }}>o</span></b>\r\n                    <p>Use registered email to reset your Fundoo account password</p>\r\n                </div>\r\n\r\n                <TextInput label=\"Email\" ref={this.state.userName} parentCallback={this.handleCallback} />\r\n\r\n                <div className=\"options\">\r\n                    <Link to=\"/login\" className=\"link\"><div>Go back to login</div></Link>\r\n                    <span><button onClick={this.checkInput}>Send reset link</button></span>\r\n                </div>\r\n                <SimpleSnackbar/>\r\n            </form>\r\n\r\n        )\r\n    }\r\n}","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Dashboard\\Dashboard.jsx",["69"],"import React, { useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport HighlightIcon from '@material-ui/icons/Highlight';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\nimport DashLogo from '../../Assets/LogoDashboard.png';\r\n\r\nimport ReplayIcon from '@material-ui/icons/Replay'\r\nimport ViewStreamOutlinedIcon from '@material-ui/icons/ViewStreamOutlined';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport DialpadIcon from '@material-ui/icons/Dialpad';\r\n\r\nimport Badge from '@material-ui/core/Badge';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport Note from '../Note-Template/Note'\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst userId = localStorage.getItem('userId')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        backgroundColor: 'white'\r\n    },\r\n\r\n    // for toolbar\r\n\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        boxShadow: 'none',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    search: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        marginLeft: '20px',\r\n        paddingLeft: '10px',\r\n        paddingTop: '5px',\r\n        paddingBottom: '5px',\r\n        borderRadius: '10px',\r\n        backgroundColor: '#f1f3f4',\r\n        marginRight: theme.spacing(2),\r\n        width: '50%',\r\n        \"&:click\": {\r\n            backgroundColor: 'white',\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: '5px',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        right: '20px',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    barIcons: {\r\n        marginLeft: '10px',\r\n        marginRight: '10px'\r\n    },\r\n\r\n    heading: {\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none',\r\n        },\r\n\r\n    },\r\n\r\n    // for drawer\r\n\r\n    menuButton: {\r\n        marginRight: 0,\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n        [theme.breakpoints.down('sm')]: {\r\n            position: 'fixed',\r\n            zIndex: 1,\r\n        },\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        borderRight: 0\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: '50px',\r\n        borderRight: 0\r\n    },\r\n\r\n    buttonCustomization: {\r\n        borderRadius: '50px',\r\n        // borderBottomRightRadius: '50px',\r\n        '&:focus': {\r\n            backgroundColor: '#feefc3'\r\n        }\r\n    },\r\n\r\n\r\n    // main body\r\n\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'white',\r\n        // padding: theme.spacing(3),\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginLeft: '60px',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\nlet flag = true\r\nlet infoCollected\r\n\r\nexport default function Dashboard() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [state, setState] = React.useState({\r\n        info : []\r\n    });\r\n    const handleDrawer = () => {\r\n        setOpen(!open)\r\n        flag = !flag\r\n    };\r\n\r\n    const hoverHandle = () => {\r\n        if (flag === false)\r\n            setOpen(!open)\r\n\r\n    }\r\n\r\n    const handleCallback = (inputform) => {\r\n        // noteservices.createNote(inputform, userId).then((response) => {\r\n        //     console.log(response)\r\n        //     getNotes()\r\n        // }).catch((error) => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n    const getNotes = () => {\r\n        console.log(userId)\r\n        // noteservices.getNotes(userId).then((response) => {\r\n        //     console.log(response)\r\n        //     let serverData = response.data.data.data\r\n        //     setState({info:serverData})\r\n        // }).catch((error) => {\r\n        //     console.log(error)\r\n        // })\r\n    }\r\n\r\n   useEffect(()=>{\r\n       if(state.info !== infoCollected)\r\n        getNotes()\r\n    })\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawer}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <img src={DashLogo} alt=\"Fundoo notes\" />\r\n                    <Typography variant=\"h6\" noWrap className={classes.heading}>\r\n                        Fundoo Notes\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase className={classes.input}\r\n                            placeholder=\"Search\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }} />\r\n                    </div>\r\n\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton>\r\n                            <Badge >\r\n                                <ReplayIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge >\r\n                                <ViewStreamOutlinedIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge >\r\n                                <SettingsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge >\r\n                                <DialpadIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                })}\r\n                classes={{\r\n                    paper: clsx({\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open,\r\n                    }),\r\n                }}\r\n            >\r\n                <List\r\n                    style={{ marginTop: '70px' }}\r\n                    onMouseEnter={hoverHandle}\r\n                    onMouseLeave={hoverHandle}\r\n                >\r\n                    <ListItem button key='Notes' className={classes.buttonCustomization}>\r\n                        <ListItemIcon><HighlightIcon /></ListItemIcon>\r\n                        <ListItemText primary='Notes' />\r\n                    </ListItem>\r\n                    <ListItem button key='Reminders' className={classes.buttonCustomization}>\r\n                        <ListItemIcon><NotificationsIcon /></ListItemIcon>\r\n                        <ListItemText primary='Reminders' />\r\n                    </ListItem>\r\n                    <ListItem button key='Edit Labels' className={classes.buttonCustomization}>\r\n                        <ListItemIcon><CreateIcon /></ListItemIcon>\r\n                        <ListItemText primary='Edit Labels' />\r\n                    </ListItem>\r\n                    <ListItem button key='Archive' className={classes.buttonCustomization}>\r\n                        <ListItemIcon><ArchiveIcon /></ListItemIcon>\r\n                        <ListItemText primary='Archive' />\r\n                    </ListItem>\r\n                    <ListItem button key='Bin' className={classes.buttonCustomization}>\r\n                        <ListItemIcon><DeleteIcon /></ListItemIcon>\r\n                        <ListItemText primary='Bin' />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Note title='' body='' color='#ffffff' parentCallback={handleCallback} />\r\n                <div className = \"update_div\">\r\n                {Object.values(state.info).map((current) => {\r\n                    return (\r\n                        <Note title={current.title} body={current.description} color={current.color} parentCallback={handleCallback} isOld={true}/>                        \r\n                        // <p>{current.title},{current.description},{current.color}</p>          \r\n                    )                   \r\n                })}\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}","E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Note-Template\\Note.jsx",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\Components\\Icon-Palette\\iconsPalette.jsx",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\ProtectedRoute.jsx",[],"E:\\Software Savefiles\\Backend savefiles\\Fundoo\\fundoo\\src\\services\\fire.jsx",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":37,"column":17,"nodeType":"76","messageId":"77","endLine":37,"endColumn":21},{"ruleId":"74","severity":1,"message":"78","line":29,"column":13,"nodeType":"76","messageId":"77","endLine":29,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":44,"column":13,"nodeType":"76","messageId":"77","endLine":44,"endColumn":17},{"ruleId":"74","severity":1,"message":"75","line":27,"column":17,"nodeType":"76","messageId":"77","endLine":27,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":186,"column":19,"nodeType":"76","messageId":"77","endLine":186,"endColumn":27},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]